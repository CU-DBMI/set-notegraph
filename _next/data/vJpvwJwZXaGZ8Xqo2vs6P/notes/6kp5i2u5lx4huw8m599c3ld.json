{"pageProps":{"note":{"id":"6kp5i2u5lx4huw8m599c3ld","title":"Install","desc":"","updated":1647553228074,"created":1647552466698,"custom":{},"fname":"tools.k8s.knative.install","type":"note","vault":{"fsPath":"vault"},"contentHash":"c56a47d1c8d4515a1a4ff207bbd81d5c","links":[],"anchors":{"prerequisites-and-tools":{"type":"header","text":"Prerequisites and Tools","value":"prerequisites-and-tools","line":8,"column":0,"depth":2},"install-kubernetes-control-plane-and-workers":{"type":"header","text":"Install Kubernetes Control Plane and Workers","value":"install-kubernetes-control-plane-and-workers","line":22,"column":0,"depth":2},"install-knative":{"type":"header","text":"Install knative","value":"install-knative","line":50,"column":0,"depth":2},"knative-serving":{"type":"header","text":"knative-serving","value":"knative-serving","line":64,"column":0,"depth":3},"knative-eventing":{"type":"header","text":"knative-eventing","value":"knative-eventing","line":94,"column":0,"depth":3},"configure-tls":{"type":"header","text":"Configure TLS","value":"configure-tls","line":102,"column":0,"depth":2}},"children":[],"parent":"l1pa3h6amzhd5d46lv732h6","data":{}},"body":"<h1 id=\"install\">Install<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#install\"></a></h1>\n<h2 id=\"prerequisites-and-tools\">Prerequisites and Tools<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#prerequisites-and-tools\"></a></h2>\n<p>Assumes kubectl is already installed on your workstation.</p>\n<p>Lens is recommended for watching deployment, service and pod provisioning. <a href=\"https://k8slens.dev/\">https://k8slens.dev/</a></p>\n<p>Review the knative install guide: <a href=\"https://knative.dev/docs/install/operator/knative-with-operators/#install-the-knative-operator\">https://knative.dev/docs/install/operator/knative-with-operators/#install-the-knative-operator</a></p>\n<p>Requires <code>helm</code>.</p>\n<p>YAML files referenced in this doc are under \\src\\knative-install-resources.</p>\n<p>This doc is written against knative 1.3.1.</p>\n<h2 id=\"install-kubernetes-control-plane-and-workers\">Install Kubernetes Control Plane and Workers<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#install-kubernetes-control-plane-and-workers\"></a></h2>\n<p>Install a zone cluster (1 per billing account is free) for MVP.</p>\n<p>This is currently installed as one large cluster, but instead install the cluster, create an autoscaling worker pool, then delete the default pool. </p>\n<p>TODO - refactor for the above and include reference to the terraform.</p>\n<pre><code>gcloud container --project \"cuhealthai-foundations\" clusters create \"zonal-cluster-1\" --zone \"us-central1-c\" --no-enable-basic-auth --cluster-version \"1.21.6-gke.1500\" --release-channel \"regular\" --machine-type \"e2-medium\" --image-type \"COS_CONTAINERD\" --disk-type \"pd-standard\" --disk-size \"100\" --metadata disable-legacy-endpoints=true --scopes \"https://www.googleapis.com/auth/devstorage.read_only\",\"https://www.googleapis.com/auth/logging.write\",\"https://www.googleapis.com/auth/monitoring\",\"https://www.googleapis.com/auth/servicecontrol\",\"https://www.googleapis.com/auth/service.management.readonly\",\"https://www.googleapis.com/auth/trace.append\" --max-pods-per-node \"110\" --num-nodes \"3\" --logging=SYSTEM,WORKLOAD --monitoring=SYSTEM --enable-ip-alias --network \"projects/cuhealthai-foundations/global/networks/default\" --subnetwork \"projects/cuhealthai-foundations/regions/us-central1/subnetworks/default\" --no-enable-intra-node-visibility --default-max-pods-per-node \"110\" --no-enable-master-authorized-networks --addons HorizontalPodAutoscaling,HttpLoadBalancing,GcePersistentDiskCsiDriver --enable-autoupgrade --enable-autorepair --max-surge-upgrade 1 --max-unavailable-upgrade 0 --enable-shielded-nodes --node-locations \"us-central1-c\"\n</code></pre>\n<p>Configure .kube/config with credentials for the new cluster.</p>\n<pre><code>gcloud container clusters get-credentials zonal-cluster-1 --zone us-central1-c --project cuhealthai-foundations\n</code></pre>\n<p>Copy the cluster config secret(s) to the password vault.</p>\n<p>Once the cluster is up, fetching nodes should show something like this (example):</p>\n<pre><code>$>kubectl get nodes\nNAME                                             STATUS   ROLES    AGE     VERSION\ngke-zonal-cluster-1-default-pool-1915e7e8-2wz5   Ready    &#x3C;none>   6m43s   v1.21.6-gke.1500\ngke-zonal-cluster-1-default-pool-1915e7e8-dlht   Ready    &#x3C;none>   6m43s   v1.21.6-gke.1500\ngke-zonal-cluster-1-default-pool-1915e7e8-qcq1   Ready    &#x3C;none>   6m43s   v1.21.6-gke.1500\n</code></pre>\n<h2 id=\"install-knative\">Install knative<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#install-knative\"></a></h2>\n<p>Install the knative operator:</p>\n<pre><code>kubectl apply -f https://github.com/knative/operator/releases/download/knative-v1.3.1/operator.yaml\n</code></pre>\n<p>Verify the installation; the deployment should be available (example):</p>\n<pre><code>$>kubectl get deployment knative-operator\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\nknative-operator   1/1     1            1           69s\n</code></pre>\n<h3 id=\"knative-serving\">knative-serving<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#knative-serving\"></a></h3>\n<p>Install the knative-serving file:</p>\n<pre><code>kubectl apply -f knative-serving.yaml\n</code></pre>\n<p>Fetch the external IP address for DNS configuration:</p>\n<pre><code>kubectl --namespace knative-serving get service kourier\n</code></pre>\n<p>It may take a minute, but eventually the EXTERNAL-IP address will be assigned (example shown).</p>\n<pre><code>NAME      TYPE           CLUSTER-IP    EXTERNAL-IP     PORT(S)                      AGE\nkourier   LoadBalancer   10.0.10.151   34.123.218.33   80:31370/TCP,443:31963/TCP   38s\n</code></pre>\n<p>Verify knative-serving is running:</p>\n<pre><code>kubectl get KnativeServing knative-serving -n knative-serving\n</code></pre>\n<p>You should see READY = True.</p>\n<pre><code>NAME              VERSION   READY   REASON\nknative-serving   1.3.0     True\n</code></pre>\n<p>Given the EXTERNAL-IP from a couple steps above, configure DNS <code>*.default</code> and <code>*.center</code> to a A records. <code>default</code> and <code>center</code> map here to k8s namespaces. For every new namespace used with knative, we need to add a separate wildcard A entry.</p>\n<h3 id=\"knative-eventing\">knative-eventing<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#knative-eventing\"></a></h3>\n<p>Install knative-eventing:</p>\n<pre><code>kubectl apply -f knative-eventing.yaml\n</code></pre>\n<p>There are lots of eventing sources. TBD how we'll use these.</p>\n<h2 id=\"configure-tls\">Configure TLS<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#configure-tls\"></a></h2>\n<p>Following this guide, and assuming the use of the HTTP-01 challenge. <a href=\"https://knative.dev/docs/serving/using-auto-tls/#enabling-auto-tls\">https://knative.dev/docs/serving/using-auto-tls/#enabling-auto-tls</a></p>\n<p>Add the cert-manager controller.</p>\n<pre><code>kubectl apply --filename https://github.com/knative/net-certmanager/releases/download/knative-v1.3.0/release.yaml\n</code></pre>\n<p>Install cert-manager.</p>\n<pre><code>helm repo add jetstack https://charts.jetstack.io\nhelm repo update\nhelm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.7.1 --set installCRDs=true\n</code></pre>\n<p>Install cluster issuer:</p>\n<pre><code>kubectl apply -f letsencrypt-http01-issuer.yaml\n</code></pre>\n<p>Check to cluster issuer to see that READY = True:</p>\n<pre><code>kubectl get clusterissuer letsencrypt-http01-issuer\n</code></pre>\n<p>Add a configmap for the certmananger:</p>\n<pre><code>kubectl apply -f config-certmanager.yaml\n</code></pre>\n<p>Enable Auto-TLS. I'm patching below, but with Windows you may have to manually edit.</p>\n<pre><code>kubectl patch configmap config-network --namespace knative-serving -p '{\"data\":{\"auto-tls\":\"Enabled\",\"autocreate-cluster-domain-claims\":\"true\"}}'\n</code></pre>\n<p>Install a garbage collection policy</p>\n<pre><code>kubectl apply -f gc.yaml\n</code></pre>","noteIndex":{"id":"ar4f3o70zlm93rwlaw6ffog","title":"Home","desc":"","updated":1656532071823,"created":1652299104094,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"e67bc61669393c88f0f55ffa38bb22d6","links":[{"type":"wiki","from":{"fname":"root","id":"ar4f3o70zlm93rwlaw6ffog","vaultName":"vault"},"value":"admin.onboading.checklist","alias":"Software Engineering Team Onboarding Checklist","position":{"start":{"line":5,"column":54,"offset":209},"end":{"line":5,"column":177,"offset":332},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"admin.onboading.checklist","anchorHeader":"software-engineering-team-onboarding-checklist"}}],"anchors":{"welcome":{"type":"header","text":"Welcome","value":"welcome","line":7,"column":0,"depth":2}},"children":["0lzc0dvuck7s5d6wbu012jz","t4lf8cc2kvpzurjwl6pnuju","5tmv1gfg7n3iyvzssedcwkk","ycwu5w4i058oq8zh1cpyijv","tjkae9vlw7qtsimshpuwwad"],"parent":null,"data":{},"body":"## Welcome\n\nThis is the root page for the Software Engineering Team's (SET) notegraph. This content is organized using [Dendron](https://www.dendron.so/).\n\nNew team member onboarding should use the checklist: [[Software Engineering Team Onboarding Checklist|admin.onboading.checklist#software-engineering-team-onboarding-checklist]]"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"SET Notegraph","description":"Software engineering team notes"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","assetsPrefix":"/set-notegraph","siteUrl":"https://CU-DBMI.github.io","enableMermaid":true,"duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}